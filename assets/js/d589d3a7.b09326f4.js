"use strict";(self.webpackChunkreact_rxjs_org=self.webpackChunkreact_rxjs_org||[]).push([[162],{1241:function(e,t,n){n.r(t),n.d(t,{assets:function(){return T},contentTitle:function(){return j},default:function(){return w},frontMatter:function(){return N},metadata:function(){return y},toc:function(){return S}});var r=n(3117),a=n(102),o=n(7294),s=n(3905),i=n(5709),l=n(1330),u=(0,n(6301).gQ)(),c=u[0],p=u[1],d=(0,l.ak)(c,""),m=d[0],h=d[1];function g(){var e=m();return o.createElement("div",null,o.createElement("input",{type:"text",value:e,placeholder:"Type something...",onChange:function(e){return p(e.target.value)}}),o.createElement("br",null),"Echo: ",e)}var x=(0,l.ak)(h.pipe((0,i.U)((function(e){return e.length})))),k=x[0];x[1];function b(){var e=k();return o.createElement(o.Fragment,null,"Character Count: ",e)}function f(){return o.createElement("div",null,o.createElement(l.xs,null,o.createElement(g,null),o.createElement(b,null)))}var v=n(1262),C=["components"],N={title:"Getting Started"},j=void 0,y={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"Installation",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/docs/getting-started",draft:!1,editUrl:"https://github.com/re-rxjs/react-rxjs.org/tree/master/docs/getting-started.md",tags:[],version:"current",frontMatter:{title:"Getting Started"},sidebar:"someSidebar",previous:{title:"Core Concepts",permalink:"/docs/core-concepts"},next:{title:"Github Issues Viewer",permalink:"/docs/tutorial/github-issues"}},T={},S=[{value:"Installation",id:"installation",level:2},{value:"Create a hook from an observable",id:"create-a-hook-from-an-observable",level:2},{value:"Next steps",id:"next-steps",level:2}],E={toc:S},I="wrapper";function w(e){var t=e.components,n=(0,a.Z)(e,C);return(0,s.kt)(I,(0,r.Z)({},E,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"installation"},"Installation"),(0,s.kt)("p",null,"React-RxJS is published in npm as ",(0,s.kt)("inlineCode",{parentName:"p"},"@react-rxjs/core")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"npm i rxjs @react-rxjs/core @react-rxjs/utils\n")),(0,s.kt)("p",null,"or using yarn"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add rxjs @react-rxjs/core @react-rxjs/utils\n")),(0,s.kt)("h2",{id:"create-a-hook-from-an-observable"},"Create a hook from an observable"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"@react-rxjs/core")," exports a function called ",(0,s.kt)("inlineCode",{parentName:"p"},"bind")," which is used to connect a stream to a hook."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},'import { bind } from "@react-rxjs/core"\nimport { createSignal } from "@react-rxjs/utils"\n\n// A signal is an entry point to react-rxjs. It\'s equivalent to using a subject\nconst [textChange$, setText] = createSignal<string>();\n\nconst [useText, text$] = bind(textChange$, "")\n\nfunction TextInput() {\n  const text = useText()\n\n  return (\n    <div>\n      <input\n        type="text"\n        value={text}\n        placeholder="Type something..."\n        onChange={(e) => setText(e.target.value)}\n      />\n      <br />\n      Echo: {text}\n    </div>\n  )\n}\n')),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"bind")," returns a tuple that contains the hook, plus the underlying shared observable so it can be used by other streams:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},'import { map } from "rxjs/operators"\nimport { bind, Subscribe } from "@react-rxjs/core"\n\n// Previously...\n// const [useText, text$] = bind(...);\n\nconst [useCharCount, charCount$] = bind(\n  text$.pipe(\n    map((text) => text.length)\n  )\n)\n\nfunction CharacterCount() {\n  const count = useCharCount()\n\n  return <>Character Count: {count}</>\n}\n')),(0,s.kt)("p",null,"Something to note is that a subscription on the underlying observable must be present before the hook is executed. We can use ",(0,s.kt)("inlineCode",{parentName:"p"},"Subscribe")," to help us with it:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"function CharacterCounter() {\n  return (\n    <div>\n      <Subscribe>\n        <TextInput />\n        <CharacterCount />\n      </Subscribe>\n    </div>\n  )\n}\n")),(0,s.kt)("p",null,"The interactive result:"),(0,s.kt)(v.Z,{mdxType:"BrowserOnly"},(function(){return(0,s.kt)(f,{mdxType:"CharacterCounter"})})),(0,s.kt)("h2",{id:"next-steps"},"Next steps"),(0,s.kt)("p",null,"We strongly recommend reading through ",(0,s.kt)("a",{parentName:"p",href:"/docs/core-concepts"},"core concepts")," to\nunderstand the mindset of this library."))}w.isMDXComponent=!0}}]);