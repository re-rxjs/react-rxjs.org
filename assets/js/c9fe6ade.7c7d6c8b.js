"use strict";(self.webpackChunkreact_rxjs_org=self.webpackChunkreact_rxjs_org||[]).push([[395],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(r),m=a,d=p["".concat(l,".").concat(m)]||p[m]||b[m]||o;return r?n.createElement(d,s(s({ref:t},c),{},{components:r})):n.createElement(d,s({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9627:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var n=r(3117),a=r(102),o=(r(7294),r(3905)),s=["components"],i={title:"useStateObservable(observable)",sidebar_label:"useStateObservable()"},l=void 0,u={unversionedId:"api/core/useStateObservable",id:"api/core/useStateObservable",title:"useStateObservable(observable)",description:"Gets the latest value from an observable returned by state.",source:"@site/docs/api/core/useStateObservable.md",sourceDirName:"api/core",slug:"/api/core/useStateObservable",permalink:"/docs/api/core/useStateObservable",draft:!1,editUrl:"https://github.com/re-rxjs/react-rxjs.org/tree/master/docs/api/core/useStateObservable.md",tags:[],version:"current",frontMatter:{title:"useStateObservable(observable)",sidebar_label:"useStateObservable()"},sidebar:"someSidebar",previous:{title:"state()",permalink:"/docs/api/core/state"},next:{title:"shareLatest()",permalink:"/docs/api/core/shareLatest"}},c={},p=[{value:"Arguments",id:"arguments",level:4},{value:"Returns",id:"returns",level:4},{value:"Examples",id:"examples",level:3},{value:"With factory of observables",id:"with-factory-of-observables",level:4},{value:"See also",id:"see-also",level:2}],b={toc:p},m="wrapper";function d(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)(m,(0,n.Z)({},b,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Gets the latest value from an observable returned by ",(0,o.kt)("inlineCode",{parentName:"p"},"state"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function useStateObservable<T>(\n  observable: StateObservable<T>,\n): Exclude<T, typeof SUSPENSE>\n")),(0,o.kt)("h4",{id:"arguments"},"Arguments"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"observable"),": The ",(0,o.kt)("inlineCode",{parentName:"li"},"StateObservable")," to get the value from.")),(0,o.kt)("h4",{id:"returns"},"Returns"),(0,o.kt)("p",null,"The latest emitted value of the Observable."),(0,o.kt)("p",null,"If the Observable hasn't emitted a value yet, it will leverage React Suspense\nwhile it's waiting for the first value."),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { scan } from "rxjs/operators"\nimport { state, useStateObservable } from "@react-rxjs/core"\n\nconst counter$ = state(clicks$.pipe(startWith(0)), 0)\n\nfunction CounterDisplay() {\n  const counter = useStateObservable(counter$)\n\n  return <div>{counter}</div>\n}\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"It's important to note that the ",(0,o.kt)("inlineCode",{parentName:"p"},"StateObservable")," must be created outside the React render function, otherwise it could run into an infinite loop."),(0,o.kt)("p",{parentName:"admonition"},"For observables that need an instance id, use the parametric overload of ",(0,o.kt)("inlineCode",{parentName:"p"},"state"),". For observables that need other parameters as input, try to model these parameters as other StateObservables of your application and use RxJS Observable composition.")),(0,o.kt)("h4",{id:"with-factory-of-observables"},"With factory of observables"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const getStory$ = state((storyId: number) => getStoryWithUpdates$(storyId))\n\nconst Story: React.FC<{ id: number }> = ({ id }) => {\n  const story = useStateObservable(getStory$(id))\n\n  return (\n    <article>\n      <h1>{story.title}</h1>\n      <p>{story.description}</p>\n    </article>\n  )\n}\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"useStateObservable")," needs the observable passed as a parameter to already have a subscription active, otherwise it will throw a ",(0,o.kt)("inlineCode",{parentName:"p"},"Missing Subscribe")," error."),(0,o.kt)("p",{parentName:"admonition"},"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Subscribe>{children}</Subscribe>")," component to help manage your subscriptions.")),(0,o.kt)("h2",{id:"see-also"},"See also"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./state"},(0,o.kt)("inlineCode",{parentName:"a"},"state()"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./bind"},(0,o.kt)("inlineCode",{parentName:"a"},"bind()"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./subscribe"},(0,o.kt)("inlineCode",{parentName:"a"},"<Subscribe />")))))}d.isMDXComponent=!0}}]);