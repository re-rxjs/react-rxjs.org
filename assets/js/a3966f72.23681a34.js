"use strict";(self.webpackChunkreact_rxjs_org=self.webpackChunkreact_rxjs_org||[]).push([[902],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(n),f=o,d=u["".concat(c,".").concat(f)]||u[f]||m[f]||a;return n?r.createElement(d,l(l({ref:t},p),{},{components:n})):r.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7267:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),l=["components"],i={title:"collectValues()"},c=void 0,s={unversionedId:"api/utils/collectValues",id:"api/utils/collectValues",title:"collectValues()",description:"This function is deprecated. partitionByKey with",source:"@site/docs/api/utils/collectValues.md",sourceDirName:"api/utils",slug:"/api/utils/collectValues",permalink:"/docs/api/utils/collectValues",draft:!1,editUrl:"https://github.com/re-rxjs/react-rxjs.org/tree/master/docs/api/utils/collectValues.md",tags:[],version:"current",frontMatter:{title:"collectValues()"},sidebar:"someSidebar",previous:{title:"collect()",permalink:"/docs/api/utils/collect"}},p={},u=[{value:"Returns",id:"returns",level:4},{value:"Example",id:"example",level:3},{value:"See also",id:"see-also",level:2}],m={toc:u},f="wrapper";function d(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)(f,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This function is deprecated. ",(0,a.kt)("a",{parentName:"p",href:"partitionByKey"},(0,a.kt)("inlineCode",{parentName:"a"},"partitionByKey"))," with\n",(0,a.kt)("a",{parentName:"p",href:"combineKeys"},(0,a.kt)("inlineCode",{parentName:"a"},"combineKeys"))," covers its intended use case.")),(0,a.kt)("p",null,"A ",(0,a.kt)("a",{parentName:"p",href:"https://rxjs.dev/guide/v6/pipeable-operators"},"pipeable operator")," that collects all the ",(0,a.kt)("a",{parentName:"p",href:"https://rxjs.dev/api/index/class/GroupedObservable"},(0,a.kt)("inlineCode",{parentName:"a"},"GroupedObservable")),"s emitted by\nthe source and emits a ",(0,a.kt)("inlineCode",{parentName:"p"},"Map")," with the latest values of the inner Observables."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"function collectValues<K, V>(): OperatorFunction<GroupedObservable<K, V>, Map<K, V>>\n")),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://rxjs.dev/api/index/interface/OperatorFunction"},(0,a.kt)("inlineCode",{parentName:"a"},"OperatorFunction<GroupedObservable<K, V>, Map<K, V>>")),": An Observable that\nemits a ",(0,a.kt)("inlineCode",{parentName:"p"},"Map")," with the latest value for each key in the source grouped Observables."),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { Subject } from \'rxjs\'\nimport { mapTo, scan, takeWhile } from \'rxjs/operators\'\nimport { collectValues, split } from \'@react-rxjs/utils\'\n\nconst votesByKey$ = new Subject<{ key: string }>()\nconst counters$ = votesByKey$.pipe(\n  split(\n    (vote) => vote.key,\n    (votes$) =>\n      votes$.pipe(\n        mapTo(1),\n        scan((count) => count + 1),\n        takeWhile((count) => count < 3),\n      ),\n  ),\n  collectValues(),\n)\n\ncounters$.subscribe((counters) => {\n  console.log("counters$:")\n  counters.forEach((value, key) => {\n    console.log(`${key}: ${value}`)\n  })\n})\n\nvotesByKey$.next({ key: "foo" })\n// > counters$:\n// > foo: 1\n\nvotesByKey$.next({ key: "foo" })\n// > counters$:\n// > foo: 2\n\nvotesByKey$.next({ key: "bar" })\n// > counters$:\n// > foo: 2\n// > bar: 1\n\nvotesByKey$.next({ key: "foo" })\n// > counters$:\n// > bar: 1\n\nvotesByKey$.next({ key: "bar" })\n// > counters$:\n// > bar: 2\n//\nvotesByKey$.next({ key: "bar" })\n// > counters$:\n')),(0,a.kt)("h2",{id:"see-also"},"See also"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"collect"},(0,a.kt)("inlineCode",{parentName:"a"},"collect(filter)"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"split"},(0,a.kt)("inlineCode",{parentName:"a"},"split(keySelector)"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../../tutorial/todos#collecting-the-groupedobservables"},"Todo App Tutorial"))))}d.isMDXComponent=!0}}]);