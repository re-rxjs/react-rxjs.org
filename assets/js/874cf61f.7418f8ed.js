"use strict";(self.webpackChunkreact_rxjs_org=self.webpackChunkreact_rxjs_org||[]).push([[580],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),c=u(r),f=a,m=c["".concat(i,".").concat(f)]||c[f]||d[f]||s;return r?n.createElement(m,o(o({ref:t},l),{},{components:r})):n.createElement(m,o({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=f;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[c]="string"==typeof e?e:a,o[1]=p;for(var u=2;u<s;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},170:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return c}});var n=r(3117),a=r(102),s=(r(7294),r(3905)),o=["components"],p={title:"suspended()"},i=void 0,u={unversionedId:"api/utils/suspended",id:"api/utils/suspended",title:"suspended()",description:"The [pipeable] version of [suspend]. Prepends a [SUSPENSE] to the source Observable.",source:"@site/docs/api/utils/suspended.md",sourceDirName:"api/utils",slug:"/api/utils/suspended",permalink:"/docs/api/utils/suspended",draft:!1,editUrl:"https://github.com/re-rxjs/react-rxjs.org/tree/master/docs/api/utils/suspended.md",tags:[],version:"current",frontMatter:{title:"suspended()"},sidebar:"someSidebar",previous:{title:"suspend()",permalink:"/docs/api/utils/suspend"},next:{title:"switchMapSuspended()",permalink:"/docs/api/utils/switchMapSuspended"}},l={},c=[{value:"Returns",id:"returns",level:4},{value:"Example",id:"example",level:3},{value:"See also",id:"see-also",level:2}],d={toc:c},f="wrapper";function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,s.kt)(f,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The ",(0,s.kt)("a",{parentName:"p",href:"https://rxjs.dev/guide/v6/pipeable-operators"},"pipeable")," version of ",(0,s.kt)("a",{parentName:"p",href:"suspend"},(0,s.kt)("inlineCode",{parentName:"a"},"suspend")),". Prepends a ",(0,s.kt)("a",{parentName:"p",href:"../core/suspense"},(0,s.kt)("inlineCode",{parentName:"a"},"SUSPENSE"))," to the source Observable."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"function suspended<T>(): OperatorFunction<T, T | typeof SUSPEND>\n")),(0,s.kt)("h4",{id:"returns"},"Returns"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://rxjs.dev/api/index/interface/OperatorFunction"},(0,s.kt)("inlineCode",{parentName:"a"},"OperatorFunction<T, T | typeof SUSPEND>")),": An Observable that emits ",(0,s.kt)("a",{parentName:"p",href:"../core/suspense"},(0,s.kt)("inlineCode",{parentName:"a"},"SUSPENSE")),"\nas its first value, followed by the values from the source Observable."),(0,s.kt)("h3",{id:"example"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { switchMap } from 'rxjs/operators'\nimport { suspended } from '@react-rxjs/utils'\n\nconst story$ = selectedStoryId$.pipe(\n  switchMap((id) => getStory$(id).pipe(suspended())),\n)\n")),(0,s.kt)("h2",{id:"see-also"},"See also"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"../core/suspense"},(0,s.kt)("inlineCode",{parentName:"a"},"SUSPENSE"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"suspend"},(0,s.kt)("inlineCode",{parentName:"a"},"suspend")))))}m.isMDXComponent=!0}}]);