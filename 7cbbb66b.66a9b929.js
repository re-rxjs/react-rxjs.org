(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{70:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(2),a=n(6),i=(n(0),n(95)),o={title:"partitionByKey()",sidebar_label:"partitionByKey()"},s={unversionedId:"api/utils/partitionByKey",id:"api/utils/partitionByKey",isDocsHomePage:!1,title:"partitionByKey()",description:"Groups the elements from the source stream by using a key selector, and maps",source:"@site/docs/api/utils/partitionByKey.md",slug:"/api/utils/partitionByKey",permalink:"/docs/api/utils/partitionByKey",editUrl:"https://github.com/re-rxjs/react-rxjs.org/tree/master/docs/api/utils/partitionByKey.md",version:"current",sidebar_label:"partitionByKey()",sidebar:"someSidebar",previous:{title:"mergeWithKey(inputObject)",permalink:"/docs/api/utils/mergeWithKey"},next:{title:"selfDependant()",permalink:"/docs/api/utils/selfDependant"}},c=[{value:"Examples",id:"examples",children:[]},{value:"See also",id:"see-also",children:[]}],p={rightToc:c};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Groups the elements from the source stream by using a key selector, and maps\neach of these groups by using a map function."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"export function partitionByKey<T, K, R>(\n  stream: Observable<T>,\n  keySelector: (value: T) => K,\n  streamSelector: (grouped: Observable<T>, key: K) => Observable<R>,\n): [(key: K) => GroupedObservable<K, R>, Observable<K[]>]\n")),Object(i.b)("h4",{id:"arguments"},"Arguments"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"stream"),": Input stream"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"keySelector"),": Function that specifies the key for each element in ",Object(i.b)("inlineCode",{parentName:"li"},"stream")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"streamSelector"),": Function to apply to each resulting group")),Object(i.b)("h4",{id:"returns"},"Returns"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"[1, 2]"),":"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"A function that accepts a key and returns a stream for the group of that key.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"A stream with the list of active keys"))),Object(i.b)("h3",{id:"examples"},"Examples"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'const source = interval(1000);\nconst [getGroupByKey, keys$] = partitionByKey(\n  source,\n  x => x % 2 == 0 ? "even" : "odd",\n  (groupedObservable$, key) => groupedObservable$.pipe(map(x => `${x} is ${key}`))\n);\n\nconst [useEven, even$] = bind(getGroupByKey("even"));\nconst [useOdd, odd$] = bind(getGroupByKey("odd"));\nconst [useKeys] = bind(keys$);\n\nfunction MyComponent() {\n  const odd = useOdd();\n  const even = useEven();\n  const keys = useKeys();\n\n  return (\n    <>\n      <div>Your keys are: {keys.join(", ")}</div>\n      <div>{odd}</div>\n      <div>{even}</div>\n    </>\n  );\n}\n')),Object(i.b)("p",null,"A more typical list example. The list component can bind the list of keys\nwhile the item component binds the stream for each item, eliminating\nunnecessary renders:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),'interface Pet {\n  id: number;\n  pet: string,\n  pos?: number;\n}\n\nconst petNames = ["Fluffy", "Bella", "Nala", "Nocturne", "Teddy"]\n               .map((pet, id): Pet => ({pet, id}));\n\nconst [petUpdate$, updatePet] = createSignal<Pet>();\n\n// Let\'s line up our pets\nconst petRace$ = merge(of(...petNames), petUpdate$);\n\nconst [petByID, petIds$] = partitionByKey(\n  petRace$,\n  x => x.id,\n)\n\nconst [usePetByID] = bind((id: number) => petByID(id));\nconst [usePetIDs] = bind(petIds$);\n\nconst PetItem = ({petID}: {petID: number}) => {\n  const pet = usePetByID(petID);\n\n  return (\n    <li>\n      <div style={{width:\'100%\', textAlign:\'right\'}}>\n        {pet.pet}\n      </div>\n      <br />\n      <div style={{textAlign:\'left\'}}>\n        {\'*\'.repeat(pet.pos || 1)}\n      </div>\n    </li>\n  );\n}\n\nconst PetList = () => {\n  const petIDs = usePetIDs();\n\n  return (<ul>{petIDs.map(x => (<PetItem key={x} petID={x} />))}</ul>);\n}\n')),Object(i.b)("h2",{id:"see-also"},"See also"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"combineKeys"}),Object(i.b)("inlineCode",{parentName:"a"},"combineKeys()")))))}l.isMDXComponent=!0},95:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),l=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,m=u["".concat(o,".").concat(d)]||u[d]||b[d]||i;return n?a.a.createElement(m,s(s({ref:t},p),{},{components:n})):a.a.createElement(m,s({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);